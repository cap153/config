# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# 设置主键
# set $mod Mod4
set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# 可以使用图形程序wdisplays(AUR) 或终端程序 wlr-randr(AUR) 来更改分辨率、旋转和排列显示
# 多显示器
# swaymsg -t get_outputs
# 使用上面命令查看活跃的显示器
Output DP-3 {
	pos 0,0
  mode 1920x1080@179.998Hz
}
output eDP-1 {
	pos 0,0
	mode 1920x1080@40.011Hz
}
output HDMI-A-1 pos 1920 0 res 1920x1080
# eDP-1的坐标(0,0)
# HDMI-A-1的坐标(1920,0)，相当于位于右边扩展屏
# 指定工作空间，对半分
workspace 1 output eDP-1
workspace 2 output eDP-1
workspace 3 output eDP-1
workspace 4 output eDP-1
workspace 5 output eDP-1
workspace 6 output eDP-1
workspace 7 output eDP-1
workspace 8 output eDP-1
workspace 9 output eDP-1
workspace 10 output HDMI-A-1

# 复制屏幕的解决方案wl-mirror
# yay -S wl-mirror pipectl
bindsym $mod+p exec wl-present mirror eDP-1

# 键盘映射
input * {
	xkb_layout "us"
	xkb_variant "colemak"
	# 交换大写锁定和退出(见https://man.archlinux.org/man/xkeyboard-config.7)
	# xkb_options "caps:swapescape"
	# 大写锁定使用ctrl，不交换
	# xkb_options "caps:ctrl_modifier"
	# xkb_options "ctrl:nocaps"
	# 大写锁定使用退出，不交换
  # xkb_options "caps:escape"

	# 生成xkb配置，我的机械键盘要额外更换`和esc的位置
	# setxkbmap us colemak -option caps:escape -print
	# 把当前按键映射生成xkb文件，可以先用xmodmap配置布局,再生成xkb文件，详细见archwiki的xkb相关
	# xkbcomp $DISPLAY map.xkb
	# xkb_file "$HOME/.config/sway/map.xkb"
}

# 开启数字小键盘
input * xkb_numlock enable

# 触摸版配置
input type:touchpad {
    tap enabled # 开启触摸板单双击功能
    natural_scroll enabled
}

# waybar启动慢尝试删除xdg-desktop-portal-gtk  gnome-keyring 
# sudo pacman -Rcnsu gnome-keyring xdg-desktop-portal-gtk

# 使用'swayidle'工具来监视空闲时间，并在10分钟后运行'swaylock'来锁屏。
# -f参数设置全屏，-i参数设置背景图片
# 在设置锁屏的情况下，使用 swayidle 的 resume 参数可以确保在用户从空闲状态返回时再次触发锁屏。这样可以确保在一段时间后，即使用户回到系统，也会立即要求输入密码或进行身份验证。
# exec swayidle -w \
#   timeout 600 'swaylock -f -i $HOME/.config/sway/lock.jpg' \
#   resume 'swaylock -f -i $HOME/.config/sway/lock.jpg'

# 启用剪切板保留
exec wl-paste -t text --watch clipman store --no-persist

# 壁纸,背景,填充
output * bg $HOME/.config/sway/default.png fill

# 开机自启动软件
# exec_always --no-startup-id $HOME/.config/hy2/bf.bash # 更新机场订阅
exec_always --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 # GUI 应用程序的 Polkit 授权弹窗
exec_always --no-startup-id $HOME/Desktop/tools/update_repositories.sh # 登陆时自动更新仓库
exec_always --no-startup-id timedatectl set-ntp true # 校准时间
exec_always --no-startup-id fcitx5 # 启动中文输入法，安装sway-im的安装包可以解决kitty和wezterm没有弹窗问题
# exec_always --no-startup-id /sbin/clash-verge # 启动代理软件
# exec_always --no-startup-id /sbin/v2rayn # 启动代理软件
# 我的机械键盘要额外更换`和esc的位置，使用xmodmap来达到目的
# exec_always sleep 1.5;xmodmap $HOME/.config/sway/my_xmodmap
# exec_always --no-startup-id setxkbmap us colemak -option caps:swapescape -option altwin:alt_win # colemak键盘布局，交换大写锁定和退出，win和alt共享功能
# exec_always --no-startup-id $HOME/.config/i3/wallpic.sh # 显示壁纸
# exec_always --no-startup-id picom # 开启终端透明
# exec_always --no-startup-id $HOME/.config/i3/tap_to_click.sh # 开启摸板单双击功能
# exec_always --no-startup-id numlockx # 开启数字小键盘
# exec_always --no-startup-id blueberry-tray # 启动蓝牙托盘
# exec_always --no-startup-id variety
# exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
# exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# 设置快捷键来直接锁屏（这里使用Mod键+L）
bindsym $mod+l exec swaylock -f -i $HOME/.config/sway/lock.png

# 启动终端快捷键，启动时重置键盘映射，防止fcitx5使映射失效
# bindsym $mod+Return exec GLFW_IM_MODULE=ibus kitty
# i3下面无法输入,This seems to fix it(https://github.com/wez/wezterm/issues/3411):
# fcitx5-configtool -> Addons -> X Input Method Frontend -> Use On The Spot Style
bindsym $mod+Return exec kitty
bindsym $mod+Shift+Return exec wezterm
for_window [app_id="org.wezfurlong.wezterm"] floating enable

# 关闭窗口
bindsym $mod+q kill

# $mod+Shift+减号 移动暂存器，需先聚集指定窗口
bindsym $mod+Shift+minus move scratchpad

# $mod+减号 暂存器显示
bindsym $mod+minus scratchpad show

# 启动浏览器
# bindsym $mod+x exec xmodmap $HOME/.config/sway/my_xmodmap & msedge
bindsym $mod+w exec firefox-esr
bindsym $mod+x exec google-chrome-stable
# bindsym $mod+w exec google-chrome-stable %U --proxy-server="socks5://127.0.0.1:7890"

# 启动win7虚拟机
bindsym $mod+z exec VBoxManage startvm "win7" --type gui

# 启动安卓虚拟机
bindsym $mod+shift+z exec genymotion-player --vm-name "Custom Phone"

# 启动utool
bindsym $mod+m exec trans

# 启动qtscrcpy
bindsym $mod+s exec qtscrcpy

# 截图
# 保存到指定位置
bindsym $mod+shift+j exec grim -g "$(slurp)" ~/s.png 
# 保存到剪切板
bindsym $mod+j exec grim -g "$(slurp)" - | wl-copy

# screenkey
bindsym $mod+k exec wshowkeys -a right -a bottom -F 'ComicShannsMono Nerd Font 30'
bindsym $mod+Shift+k exec killall wshowkeys

# start dmenu (a program launcher)
# bindsym $mod+a exec dmenu_run
# bindsym $mod+a exec rofi -show run -theme solarized
# bindsym $mod+a exec fuzzel
bindsym $mod+a exec wofi --show run
# 1. run - searches $PATH for executables and allows them to be run by selecting them.
# 2. drun - searches $XDG_DATA_HOME/applications and $XDG_DATA_DIRS/applications for desktop files and allows them to be run by selecting them.
# 3. dmenu - reads from stdin and displays options which when selected will be output to stdout.

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#bindsym $mod+a exec --no-startup-id i3-dmenu-desktop

# change workspace (改变工作区)
bindsym $mod+i workspace next
bindsym $mod+n workspace prev

# change focus
# bindsym $mod+Tab focus left
# bindsym $mod+Shift+Tab right
bindsym $mod+u focus prev
bindsym $mod+e focus next

# change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+n move left
bindsym $mod+Shift+e move down
bindsym $mod+Shift+u move up
bindsym $mod+Shift+i move right


# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
#bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# 调节亮度
# 需要赋予这个文件权限/sys/class/backlight/intel_backlight/brightness
bindsym $mod+shift+y exec brightnessctl set 5%+
bindsym $mod+shift+l exec brightnessctl set 5%-


# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# layout
set $i3l vstack to workspace $ws1
set $i3l hstack 0.6 up to workspace $ws2
set $i3l spiral 0.6 to workspace $ws3

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+q exec swaymsg exit

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym n resize shrink width 10 px or 10 ppt
        bindsym e resize grow height 10 px or 10 ppt
        bindsym u resize shrink height 10 px or 10 ppt
        bindsym i resize grow width 10 px or 10 ppt

        bindsym shift+n resize shrink width 5 px or 5 ppt
        bindsym shift+e resize grow height 5 px or 5 ppt
        bindsym shift+u resize shrink height 5 px or 5 ppt
        bindsym shift+i resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# 外观，删除标题边框
default_border none

# neovide设置全屏
# for_window [class="neovide"] fullscreen enable
# 百分比指定窗口宽度,`swaymsg -t get_tree`来获取class
for_window [class="Google-chrome"] resize set width 25 ppt
# scrcpy设置浮动
for_window [class="scrcpy"] floating enable

# 使用waybar来替代i3bar
bar {
	swaybar_command waybar
}
